Kịch bản Day 7:
----------Intro------------
Xin chào các em đã quay trở lại với khóa học Web Advance của mindX Technology School.
Ngày hôm nay, chúng ta sẽ tìm hiểu nội dung bài học về ES 6 and next gen Js.

----------Giới thiệu ES6------------
Vậy cụ thể ES6 là gì, để hiểu rõ, chúng ta cần quan tâm đến lịch sử một chút.
ES6 là chữ viết tắt của ECMAScript 6, đây được coi là một tập hợp các kỹ thuật nâng cao của Javascript và là phiên bản mới nhất của chuẩn ECMAScript. Lịch sử
Khi chưa có ES thì có một đặc tả ngôn ngữ kịch bản được phát triển bởi Brendan Eich của Netscape và nó có tên là Mocha. Sau đó nó được đổi tên thành LiveScript và cuối cùng là Javascript. Vào 12-1995, Sun Microsystem và Netscape đã công bố Javascript. Tháng 3 - 1996 trình duyệt Netscape Navigator 2.0 ra đời và hỗ trợ Javascript. Sau đó, Microsoft ra mắt một ngôn ngữ tương tự tên là JScript để cạnh tranh và tránh vấn đề bản quyền. JScript được thêm vào trong Internet Explorer 3.0 và ra mắt vào tháng 8, 1996.
Netscape chuyển Javascript tới Ecma International để làm công tác chuẩn hóa và viết đặc tả, được gọi là ECMA-262, bắt đầu vào tháng 11, 1996. Và cái tên ECMAScript được hình thành từ đây bởi sự thoả thuận giữa những công ty đang tham gia vào quá trình chuẩn
ECMAScript 6 (hay còn được gọi là ES6, ES2015) là phiên bản mới nhất của chuẩn ECMAScript. Chuẩn này được phê duyệt vào tháng 6/2015. Nó là một bản nâng cấp quan trọng cho ES kể từ ES5 đã được chuẩn hoá vào năm 2009.
Vậy tóm gọn lại, cái tên ES6 được dùng để gọi những phiên bản mới và gần đây của ngôn ngữ Js mà chúng ta đã học và thực hành thời gian qua. Vậy ES6 có thực sự tiện dùng và thay đổi khác biệt, hãy cùng tìm hiểu xem qua bài hôm nay nhé các em. 

-------------Phần 1: Let, var--------------------
Trong phần một, hãy cùng đến với những cách khai báo biến bao gồm Let, var & const:
Chúng ta sẽ bắt đầu từ sự khác nhau của let & var nhưng trước hết sẽ tìm hiểu một khái niệm mới chính là Block-scoped: Một khái niệm mới được đưa ra là scope, xác định bởi cặp dấu ngoặc nhọn và bên trong là những dòng code thực hiện một hoặc nhiều hành động nào đó. Từ đây có thêm cách khai báo biến mới sử dụng let.
Cùng với định nghĩa của scope, let được đưa ra để phù hợp. Được kế thừa một vài thuộc tính của var. Với let giá trị của biến sẽ được xác định trong phạm vi hàm bao quanh, có thể là toàn bộ nếu được khai báo ở trên cùng.
Hãy cùng anh thử một số ví dụ sau đây:
Để bắt đầu vào phần code, các em hãy mở visual studio code lên và tạo folder, file nhé, hãy nhớ hôm nay là buổi 7 nha các em. Trong file index.js các em hãy thử đoạn code sau:
-------code---------
Hãy thử nhìn xem, với cách khai báo var, let có đưa ra cho chúng ta kết quả khác nhau phải không nào.
Tổng hợp lại một chút, khi sử dụng var, phạm vi của biến là global tức là có thể truy cập ở mọi vị trí trong file js. Vậy để an toàn và dễ dàng handle các biến trong phạm vi khóa học này, chúng ta nên sử dụng let nhé các em.
Tiếp một ví dụ nữa nha.
-------code---------
Sau khi thực hành ví dụ này, các em hãy thảo luận nhóm và thử trao đổi với giảng viên câu hỏi sau: biến nào tồn tại trong phạm vi của if và biến nào tồn tại trong phạm vi vòng lặp for. Hẹn gặp các em ở video tiếp theo.

------------Phần 2: const-----------------------
Tiếp theo, một phương thức khai báo biến nữa chính là const để khai báo một hàm số. 
Định nghĩa:  là một biến chỉ có thể đọc sau khi giá trị ban đầu được đặt. Hiểu cơ bản là khi gán một giá trị cho biến mình không thể thay đổi nó.
Thử một ví dụ sau đây:
---------code-----------
Tuy nhiên, hằng số không phải là giới hạn đối với bản thân giá trị, mà là về việc gán giá trị đó của biến. Đối với những trường hợp dữ liệu là array hoặc object, mình hoàn toàn có thể điều chỉnh dữ liệu bên trong array và object đó. Nhưng nếu chuyển dạng thì không thực hiện được và báo lỗi. Để hiểu đơn giản, thử ví dụ sau nhé.
---------code-----------
Và tiếp sau đây sẽ là một phần kiến thức mới nữa, hẹn gặp các em ở video tiếp theo.

------------Phần 3: arrow function--------------
Sau khi đã học về khai báo biến, giờ chúng ta hãy cùng nhau tìm hiểu về khai báo một hàm nhé các em.
Đây là một cách khai báo function mới được cập nhật trong ES6 gọi là arrow function nhưng trước tiên ta cần hiểu đây là một anonymous function, nhắc lại đôi chút về anonymous một phướng thức bắt buộc phải khai báo trước rồi mới có thể chạy được.
Cách khai báo arrow function lần này chính là:
---------code----------
Nếu nhìn bên trên, có thể thấy arrow function không mấy khác biệt so với cách thông thường. Nhưng khác biệt nằm ở những điểm sau đây.
Với hàm thực thi một câu lệnh/ biểu thức có thể rút ngắn: 
Với hàm chỉ có 1 tham số thì cặp ngoặc tròn có thể có hoặc không: 
Với hàm không có tham số thì cặp ngoặc là bắt buộc: 
Để dễ hiểu, hãy thử code một vài ví dụ sau đây.
-------code-----------

Vậy nhìn chung, việc sử dụng arrow function sẽ tiện lợi trong việc viết code cũng như gần gũi với những ngôn ngữ lập mới/ trình thịnh hành hiện tại.

Vậy là chúng ta đã hoàn thiện xong nội dung lý thuyết của bài hôm nay, còn phần nào chưa rõ các em hãy xem lại video, hỏi giảng viên và chủ động tìm hiểu thêm nhé. Chúc các em thành công.



